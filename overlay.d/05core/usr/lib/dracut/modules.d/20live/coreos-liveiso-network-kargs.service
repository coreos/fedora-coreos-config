# This unit will run very early before the dracut-cmdline
# service and detect if we want to request dracut bring up
# networking or not. We do want to request networking if:
#
# - the user is booting the live ISO
# - the user didn't already request networking via rd.neednet
# - the user provided a ignition.config.url karg, implying
#   the need for networking
# - there is an embedded ignition config
#
# For the case of the embedded Ignition config there could be a
# case where the user embeds an Ignition config (via coreos-installer
# iso embed) but doesn't want networking. In that case we'll have
# smarter detection in the future (https://github.com/coreos/fedora-coreos-tracker/issues/443)
# but the user can override with `rd.neednet=0` now if needed.
#
# If we do determine we need network and there are no other
# `ip=` kargs then we'll use `ip=dhcp,dhcp6` by default.
#
# The requesting of network will be done by writing relevant
# dracut networking args into /etc/cmdline.d/coreos-live-network-kargs.conf
# so that it gets picked up by the dracut networking scripts later
# on in boot.
#
# This is all done because we want to support a mode where
# the user can boot the live ISO and get to an interactive
# prompt without requiring networking on boot. The user can
# then configure the networking interactively.
#
[Unit]
Description=Request live ISO networking
DefaultDependencies=no
Before=dracut-cmdline.service

# Make sure we are in the initramfs. We are booted to the live
# ISO and rd.neednet wasn't already passed somewhere else
ConditionPathExists=/usr/lib/initrd-release
ConditionKernelCommandLine=!rd.neednet
ConditionKernelCommandLine=coreos.liveiso
ConditionPathExists=/run/ostree-live

# We'll assume we need network in either of these two following
# cases (see description from above)
ConditionKernelCommandLine=|ignition.config.url
ConditionPathExists=|/config.ign

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/sbin/coreos-liveiso-network-kargs
