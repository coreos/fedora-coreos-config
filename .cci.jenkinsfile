// Documentation: https://github.com/coreos/coreos-ci/blob/main/README-upstream-ci.md

// Use the exttests container here in CI to get extra coverage; xref
// https://github.com/coreos/coreos-assembler/pull/1745
cosaPod(image: "registry.svc.ci.openshift.org/coreos/cosa-exttests:latest") {
    checkoutToDir(scm, 'config')

    def basearch = shwrapCapture("cosa basearch")
    def mechanical_streams = ['branched', 'rawhide']

    shwrap("cd config && ci/validate")

    shwrap("""
        mkdir -p /srv/coreos && cd /srv/coreos
        cosa init ${env.WORKSPACE}/config
        curl -LO https://raw.githubusercontent.com/coreos/fedora-coreos-releng-automation/main/scripts/download-overrides.py
        python3 download-overrides.py
        # prep from the latest builds so that we generate a diff on PRs that add packages
        cosa buildfetch --stream=${env.CHANGE_TARGET}
    """)

    // use a --parent-build arg so we can diff later and it matches prod
    def parent_arg = ""
    def parent_commit = ""
    if (shwrapRc("test -e /srv/coreos/builds/latest/${basearch}/meta.json") == 0) {
        shwrap("cp /srv/coreos/builds/latest/${basearch}/meta.json .") // readJSON wants it in the WORKSPACE
        def meta = readJSON file: "meta.json"
        def version = meta["buildid"]
        parent_arg = "--parent-build ${version}"
        parent_commit = meta["ostree-commit"]
    }

    // do a build. If we are operating on a mechanical stream then we
    // can pin packages in lockfiles but we don't maintain a full set
    // so we can't do a strict build.
    def no_strict_build = false
    if (env.CHANGE_TARGET in mechanical_streams) {
        no_strict_build = true
    }
    cosaBuild(skipInit: true, noStrict: no_strict_build, extraFetchArgs: '--with-cosa-overrides', extraArgs: parent_arg)

    parallel metal: {
        shwrap("cd /srv/coreos && cosa buildextend-metal")
    }, metal4k: {
        shwrap("cd /srv/coreos && cosa buildextend-metal4k")
    }

    stage("Test ISO") {
        shwrap("cd /srv/coreos && cosa buildextend-live")
        kolaTestIso(extraArgs4k: "--no-pxe")
    }

    // also print the pkgdiff as a separate stage to make it more visible
    if (parent_arg != "") {
        stage("RPM Diff") {
            shwrap("""
                cd /srv/coreos
                new_commit=\$(jq -r '.["ostree-commit"]' builds/latest/${basearch}/meta.json)
                rpm-ostree db diff --repo tmp/repo ${parent_commit} \${new_commit} | tee tmp/diff.txt
                if grep -q Downgraded tmp/diff.txt; then
                    echo "Downgrade detected. This is likely unintentional. If not, you may safely ignore this error."
                    exit 1
                fi
            """)
        }
    }
}
